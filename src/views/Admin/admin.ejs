<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Dashboard - SweetHome</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f8f9fa;
    }

    .admin-container {
      display: flex;
      min-height: 100vh;
    }

    /* Sidebar */
    .sidebar {
      width: 280px;
      background: linear-gradient(135deg, #2c3e50, #34495e);
      color: white;
      position: fixed;
      height: 100vh;
      overflow-y: auto;
      transition: all 0.3s ease;
      z-index: 1000;
      transform: translateX(-100%); /* Ẩn sidebar mặc định */
    }

    .sidebar.show {
      transform: translateX(0); /* Hiện sidebar khi có class show */
    }

    .sidebar-header {
      padding: 20px;
      background: rgba(0,0,0,0.1);
      border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .sidebar-header h3 {
      color: #3498db;
      font-weight: bold;
      margin: 0;
    }

    .sidebar-menu {
      list-style: none;
      padding: 20px 0;
    }

    .sidebar-menu li {
      margin: 0;
    }

    .sidebar-menu a {
      display: flex;
      align-items: center;
      padding: 15px 25px;
      color: #ecf0f1;
      text-decoration: none;
      transition: all 0.3s ease;
      border-left: 3px solid transparent;
    }

    .sidebar-menu a:hover,
    .sidebar-menu a.active {
      background: rgba(52, 152, 219, 0.2);
      border-left-color: #3498db;
      color: white;
    }

    .sidebar-menu i {
      margin-right: 12px;
      width: 20px;
      text-align: center;
    }

    /* Main Content */
    .main-content {
      flex: 1;
      margin-left: 0; /* Bỏ margin-left mặc định */
      background-color: #f8f9fa;
      transition: margin-left 0.3s ease;
    }

    .main-content.sidebar-open {
      margin-left: 280px; /* Thêm margin khi sidebar mở */
    }

    .top-navbar {
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: white;
      padding: 15px 30px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .top-navbar .navbar-brand {
      font-size: 1.5rem;
      font-weight: bold;
      color: white;
      display: flex;
      align-items: center;
    }

    .sidebar-toggle {
      background: rgba(255,255,255,0.2);
      border: none;
      color: white;
      padding: 8px 12px;
      border-radius: 5px;
      margin-right: 15px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .sidebar-toggle:hover {
      background: rgba(255,255,255,0.3);
      transform: scale(1.05);
    }

    .sidebar-toggle i {
      font-size: 1.2rem;
    }

    .user-info {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .content-area {
      padding: 30px;
    }

    .page-header {
      background: white;
      padding: 20px 30px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      margin-bottom: 30px;
    }

    .page-header h2 {
      color: #2c3e50;
      margin: 0;
      font-weight: 600;
    }

    .breadcrumb {
      background: none;
      padding: 0;
      margin: 5px 0 0 0;
    }

    /* Cards */
    .stats-card {
      background: white;
      border-radius: 10px;
      padding: 25px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      border-left: 4px solid #3498db;
      transition: transform 0.2s ease;
    }

    .stats-card:hover {
      transform: translateY(-2px);
    }

    .stats-card .icon {
      width: 60px;
      height: 60px;
      background: linear-gradient(135deg, #3498db, #2980b9);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.5rem;
      margin-bottom: 15px;
    }

    .stats-card h3 {
      color: #2c3e50;
      font-size: 2rem;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .stats-card p {
      color: #7f8c8d;
      margin: 0;
    }

    .stats-card small {
      color: #95a5a6;
      font-size: 0.8rem;
      display: block;
      margin-top: 5px;
    }

    /* Table */
    .table-container {
      background: white;
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .table-header {
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: white;
      padding: 20px 30px;
    }

    .table-header h4 {
      margin: 0;
      font-weight: 600;
    }

    .table {
      margin: 0;
    }

    .table th {
      background: #f8f9fa;
      border: none;
      padding: 15px;
      font-weight: 600;
      color: #2c3e50;
    }

    .table td {
      padding: 15px;
      border: none;
      border-bottom: 1px solid #ecf0f1;
    }

    .btn-action {
      padding: 5px 10px;
      margin: 0 2px;
      border-radius: 5px;
      font-size: 0.8rem;
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .btn-edit {
      background: #f39c12;
      color: white;
    }

    .btn-edit:hover {
      background: #e67e22;
      color: white;
    }

    .btn-delete {
      background: #e74c3c;
      color: white;
    }

    .btn-delete:hover {
      background: #c0392b;
      color: white;
    }

    .btn-view {
      background: #3498db;
      color: white;
    }

    .btn-view:hover {
      background: #2980b9;
      color: white;
    }

    /* ============================================
       RESPONSIVE DESIGN - MOBILE FIRST APPROACH
    ============================================ */

    /* ============ MOBILE PHONES (320px - 767px) ============ */
    @media (max-width: 767px) {
      .sidebar {
        width: 100%;
        transform: translateX(-100%);
        box-shadow: 2px 0 20px rgba(0,0,0,0.3);
      }

      .sidebar.show {
        transform: translateX(0);
      }

      .main-content {
        margin-left: 0 !important;
      }

      .content-area {
        padding: 15px;
      }

      .top-navbar {
        padding: 10px 15px;
        flex-wrap: wrap;
      }

      .top-navbar .navbar-brand {
        font-size: 1.1rem;
      }

      .sidebar-toggle {
        padding: 6px 10px;
        margin-right: 10px;
      }

      .sidebar-toggle i {
        font-size: 1rem;
      }

      .user-info {
        gap: 5px;
        order: 3;
        width: 100%;
        justify-content: center;
        margin-top: 10px;
      }

      .user-info i {
        font-size: 1.5rem !important;
      }

      .user-info span {
        font-size: 0.9rem;
      }

      .page-header {
        padding: 15px;
        margin-bottom: 20px;
      }

      .page-header h2 {
        font-size: 1.4rem;
      }

      .breadcrumb {
        font-size: 0.8rem;
      }

      /* Stats Cards on Mobile */
      .stats-card {
        padding: 15px;
        margin-bottom: 15px;
        text-align: center;
      }

      .stats-card .icon {
        width: 45px;
        height: 45px;
        font-size: 1.1rem;
        margin: 0 auto 10px;
      }

      .stats-card h3 {
        font-size: 1.4rem;
      }

      .stats-card p {
        font-size: 0.85rem;
      }

      .stats-card small {
        font-size: 0.75rem;
      }

      /* Table on Mobile */
      .table-header {
        padding: 15px !important;
        flex-direction: column !important;
        gap: 10px;
        text-align: center;
      }

      .table-header h4 {
        font-size: 1rem;
      }

      .table-header .d-flex {
        flex-direction: column !important;
        align-items: center !important;
      }

      .table-header div {
        display: flex;
        flex-direction: column;
        gap: 10px;
        width: 100%;
      }

      .table {
        font-size: 0.75rem;
      }

      .table th,
      .table td {
        padding: 8px 4px;
        white-space: nowrap;
      }

      .btn-action {
        padding: 4px 6px;
        font-size: 0.65rem;
        margin: 1px;
        display: inline-block;
      }

      .form-select-sm {
        font-size: 0.75rem;
        padding: 4px 8px;
        width: 100% !important;
        margin-bottom: 10px;
      }

      /* Horizontal scroll for tables */
      .table-responsive {
        border: 1px solid #dee2e6;
        border-radius: 5px;
        max-height: 400px;
        overflow-y: auto;
      }

      /* Modal on Mobile */
      .modal-dialog {
        margin: 10px;
        max-width: calc(100% - 20px);
      }

      .modal-body {
        padding: 15px;
      }

      .modal-header {
        padding: 10px 15px;
      }

      .modal-footer {
        padding: 10px 15px;
        flex-direction: column;
      }

      .modal-footer button {
        width: 100%;
        margin-bottom: 5px;
      }

      /* Grid adjustments */
      .col-lg-3,
      .col-md-6 {
        padding: 0 7px;
      }

      .row {
        margin: 0 -7px;
      }
    }

    /* ============ SMALL MOBILE (320px - 480px) ============ */
    @media (max-width: 480px) {
      .top-navbar .navbar-brand {
        font-size: 1rem;
      }

      .sidebar-toggle {
        padding: 5px 8px;
      }

      .stats-card {
        padding: 12px 8px;
      }

      .stats-card h3 {
        font-size: 1.2rem;
      }

      .stats-card p {
        font-size: 0.8rem;
      }

      .table th,
      .table td {
        padding: 6px 3px;
        font-size: 0.7rem;
      }

      .btn-action {
        padding: 3px 5px;
        font-size: 0.6rem;
      }

      .page-header {
        padding: 12px;
      }

      .page-header h2 {
        font-size: 1.2rem;
      }

      .content-area {
        padding: 10px;
      }
    }

    /* ============ TABLETS - iPAD PORTRAIT (768px - 1024px) ============ */
    @media (min-width: 768px) and (max-width: 1024px) {
      .sidebar {
        width: 260px;
        transform: translateX(-100%);
        box-shadow: 3px 0 15px rgba(0,0,0,0.2);
      }

      .sidebar.show {
        transform: translateX(0);
      }

      .main-content {
        margin-left: 0;
        transition: margin-left 0.3s ease;
      }

      .main-content.sidebar-open {
        margin-left: 260px;
      }

      .content-area {
        padding: 25px;
      }

      .top-navbar {
        padding: 12px 25px;
      }

      .top-navbar .navbar-brand {
        font-size: 1.3rem;
      }

      .sidebar-toggle {
        min-width: 44px;
        min-height: 44px;
        padding: 10px;
      }

      .user-info {
        gap: 8px;
      }

      .stats-card {
        padding: 20px;
      }

      .stats-card .icon {
        width: 55px;
        height: 55px;
        font-size: 1.3rem;
      }

      .stats-card h3 {
        font-size: 1.8rem;
      }

      .table-header {
        padding: 18px 25px;
      }

      .table th,
      .table td {
        padding: 12px;
      }

      /* Better touch targets for iPad */
      .btn-action {
        padding: 8px 12px;
        font-size: 0.85rem;
        margin: 0 3px;
        min-width: 44px;
        min-height: 44px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
      }

      .form-select {
        min-height: 44px;
        font-size: 0.9rem;
      }

      .sidebar-menu a {
        padding: 18px 25px;
        min-height: 54px;
        font-size: 0.95rem;
      }

      .sidebar-menu i {
        font-size: 1.1rem;
      }

      /* Table responsive on iPad */
      .table-responsive {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
      }

      /* Modal on iPad */
      .modal-dialog {
        max-width: 600px;
      }
    }

    /* ============ iPAD LANDSCAPE & SMALL LAPTOPS (1025px - 1366px) ============ */
    @media (min-width: 1025px) and (max-width: 1366px) {
      .sidebar {
        width: 270px;
        transform: translateX(-100%);
      }

      .sidebar.show {
        transform: translateX(0);
      }

      .main-content {
        margin-left: 0;
      }

      .main-content.sidebar-open {
        margin-left: 270px;
      }

      .content-area {
        padding: 28px;
      }

      .top-navbar {
        padding: 14px 28px;
      }

      .stats-card {
        padding: 22px;
      }

      .stats-card .icon {
        width: 58px;
        height: 58px;
      }

      .table-header {
        padding: 19px 28px;
      }

      .btn-action {
        padding: 6px 12px;
        font-size: 0.8rem;
      }
    }

    /* ============ LARGE LAPTOPS & DESKTOPS (1367px+) ============ */
    @media (min-width: 1367px) {
      .sidebar {
        width: 280px;
        transform: translateX(-100%);
      }

      .sidebar.show {
        transform: translateX(0);
      }

      .main-content {
        margin-left: 0;
      }

      .main-content.sidebar-open {
        margin-left: 280px;
      }

      .content-area {
        padding: 30px;
      }

      .stats-card {
        padding: 25px;
      }

      .stats-card .icon {
        width: 60px;
        height: 60px;
      }

      .table-header {
        padding: 20px 30px;
      }

      .btn-action {
        padding: 5px 10px;
        font-size: 0.8rem;
      }
    }

    /* ============ LANDSCAPE ORIENTATION ADJUSTMENTS ============ */
    @media (orientation: landscape) and (max-height: 600px) {
      .sidebar-header {
        padding: 15px 20px;
      }

      .sidebar-header h3 {
        font-size: 1.1rem;
      }

      .sidebar-menu {
        padding: 10px 0;
      }

      .sidebar-menu a {
        padding: 12px 25px;
        font-size: 0.9rem;
      }

      .stats-card {
        padding: 15px;
      }

      .stats-card .icon {
        width: 40px;
        height: 40px;
        font-size: 1.1rem;
        margin-bottom: 8px;
      }

      .stats-card h3 {
        font-size: 1.4rem;
      }
    }

    /* ============ ACCESSIBILITY IMPROVEMENTS ============ */
    @media (prefers-reduced-motion: reduce) {
      .sidebar,
      .main-content,
      .stats-card,
      .btn-action,
      .sidebar-toggle {
        transition: none;
      }
    }

    /* Focus states for better accessibility */
    .btn-action:focus,
    .sidebar-toggle:focus {
      outline: 2px solid #3498db;
      outline-offset: 2px;
    }

    .sidebar-menu a:focus {
      outline: 2px solid #3498db;
      outline-offset: -2px;
    }

    .content-section {
      display: none;
    }

    .content-section.active {
      display: block;
    }

    /* Overlay cho mobile */
    .sidebar-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
      z-index: 999;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .sidebar-overlay.show {
      display: block;
      opacity: 1;
    }

    @media (max-width: 768px) {
      .sidebar-overlay.show {
        display: block;
      }
    }

    .loading {
      text-align: center;
      padding: 50px;
    }

    .pagination {
      margin-top: 20px;
    }
  </style>
</head>

<body>
  <div class="admin-container">
    <!-- Overlay cho mobile -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>
    
    <!-- Sidebar -->
    <nav class="sidebar">
      <div class="sidebar-header">
        <h3><i class="fas fa-home"></i> SweetHome Admin</h3>
      </div>
      <ul class="sidebar-menu">
        <li>
          <a href="#" class="menu-link active" data-section="dashboard">
            <i class="fas fa-tachometer-alt"></i>
            <span>Dashboard</span>
          </a>
        </li>
        <li>
          <a href="#" class="menu-link" data-section="users">
            <i class="fas fa-users"></i>
            <span>Quản lý tài khoản</span>
          </a>
        </li>
        <li>
          <a href="#" class="menu-link" data-section="homestays">
            <i class="fas fa-home"></i>
            <span>Quản lý Homestay</span>
          </a>
        </li>
        <li>
          <a href="#" class="menu-link" data-section="rooms">
            <i class="fas fa-bed"></i>
            <span>Quản lý phòng</span>
          </a>
        </li>
        <li>
          <a href="#" class="menu-link" data-section="bookings">
            <i class="fas fa-calendar-alt"></i>
            <span>Quản lý hóa đơn</span>
          </a>
        </li>
        <li>
          <a href="#" class="menu-link" data-section="reviews">
            <i class="fas fa-star"></i>
            <span>Quản lý đánh giá</span>
          </a>
        </li>
        <li>
          <a href="#" class="menu-link" data-section="services">
            <i class="fas fa-concierge-bell"></i>
            <span>Quản lý dịch vụ</span>
          </a>
        </li>
        <li>
          <a href="/logout" class="menu-link">
            <i class="fas fa-sign-out-alt"></i>
            <span>Đăng xuất</span>
          </a>
        </li>
      </ul>
    </nav>

    <!-- Main Content -->
    <div class="main-content">
      <!-- Top Navbar -->
      <nav class="top-navbar d-flex justify-content-between align-items-center">
        <div class="navbar-brand">
          <button class="sidebar-toggle" id="sidebarToggle">
            <i class="fas fa-bars"></i>
          </button>
          Admin Panel
        </div>
        <div class="user-info">
          <i class="fas fa-user-circle fa-2x"></i>
          <span><%= adminUser ? adminUser.name : 'Admin' %></span>
        </div>
      </nav>

      <!-- Content Area -->
      <div class="content-area">
        <!-- Dashboard Section -->
        <div class="content-section active" id="dashboard">
          <div class="page-header">
            <h2>Dashboard</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item active">Dashboard</li>
              </ol>
            </nav>
          </div>

          <div class="row mb-4">
            <div class="col-lg-3 col-md-6 mb-4">
              <div class="stats-card">
                <div class="icon">
                  <i class="fas fa-users"></i>
                </div>
                <h3><%= stats.totalUsers %></h3>
                <p>Tổng người dùng</p>
              </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
              <div class="stats-card">
                <div class="icon">
                  <i class="fas fa-home"></i>
                </div>
                <h3><%= stats.totalHomestays %></h3>
                <p>Tổng Homestay</p>
              </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
              <div class="stats-card">
                <div class="icon">
                  <i class="fas fa-calendar-alt"></i>
                </div>
                <h3><%= stats.totalBookings %></h3>
                <p>Tổng đặt phòng</p>
                <small class="text-muted">
                  (<%= stats.paidBookings || 0 %> đã thanh toán, <%= stats.pendingBookings || 0 %> chờ thanh toán)
                </small>
              </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
              <div class="stats-card">
                <div class="icon">
                  <i class="fas fa-dollar-sign"></i>
                </div>
                <h3><%= Math.round((stats.totalRevenue || 0) / 1000000 * 10) / 10 %>M</h3>
                <p>Doanh thu (VND)</p>
                <small class="text-muted">
                  Chỉ tính booking đã thanh toán
                </small>
              </div>
            </div>
          </div>

          <!-- Thêm hàng thống kê chi tiết -->
          <div class="row mb-4">
            <div class="col-lg-6 col-md-6 mb-4">
              <div class="stats-card" style="border-left-color: #27ae60;">
                <div class="icon" style="background: linear-gradient(135deg, #27ae60, #2ecc71);">
                  <i class="fas fa-calendar-day"></i>
                </div>
                <h3><%= new Intl.NumberFormat('vi-VN').format(stats.todayRevenue || 0) %></h3>
                <p>Doanh thu hôm nay (VND)</p>
              </div>
            </div>
            <div class="col-lg-6 col-md-6 mb-4">
              <div class="stats-card" style="border-left-color: #e67e22;">
                <div class="icon" style="background: linear-gradient(135deg, #e67e22, #f39c12);">
                  <i class="fas fa-calendar-alt"></i>
                </div>
                <h3><%= new Intl.NumberFormat('vi-VN').format(stats.monthRevenue || 0) %></h3>
                <p>Doanh thu tháng này (VND)</p>
              </div>
            </div>
          </div>

          <!-- Recent Bookings -->
          <div class="table-container">
            <div class="table-header">
              <h4>Đặt phòng gần đây</h4>
            </div>
            <div class="table-responsive">
              <table class="table">
                <thead>
                  <tr>
                    <th>ID</th>
                    <th>Khách hàng</th>
                    <th>Phòng</th>
                    <th>Ngày đặt</th>
                    <th>Tổng tiền</th>
                    <th>Trạng thái</th>
                    <th>Thanh toán</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (recentBookings && recentBookings.length > 0) { %>
                    <% recentBookings.forEach(booking => { %>
                      <tr>
                        <td><%= booking.booking_id %></td>
                        <td><%= booking.User?.name || booking.name %></td>
                        <td><%= booking.RoomType?.type_name || 'N/A' %></td>
                        <td><%= new Date(booking.booking_date).toLocaleDateString('vi-VN') %></td>
                        <td><%= new Intl.NumberFormat('vi-VN').format(booking.total_price) %> VND</td>
                        <td>
                          <% if (booking.status === 'completed') { %>
                            <span class="badge bg-success">Hoàn thành</span>
                          <% } else if (booking.status === 'pending') { %>
                            <span class="badge bg-warning">Chờ xử lý</span>
                          <% } else if (booking.status === 'canceled') { %>
                            <span class="badge bg-danger">Đã hủy</span>
                          <% } else { %>
                            <span class="badge bg-secondary"><%= booking.status %></span>
                          <% } %>
                        </td>
                        <td>
                          <% if (booking.payment_status === 'paid') { %>
                            <span class="badge bg-success">Đã thanh toán</span>
                          <% } else if (booking.payment_status === 'pending') { %>
                            <span class="badge bg-warning">Chờ thanh toán</span>
                          <% } else if (booking.payment_status === 'failed') { %>
                            <span class="badge bg-danger">Thất bại</span>
                          <% } else { %>
                            <span class="badge bg-secondary"><%= booking.payment_status %></span>
                          <% } %>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="7" class="text-center">Chưa có đặt phòng nào</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Users Section -->
        <div class="content-section" id="users">
          <div class="page-header">
            <h2>Quản lý tài khoản</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="menu-link" data-section="dashboard">Dashboard</a></li>
                <li class="breadcrumb-item active">Quản lý tài khoản</li>
              </ol>
            </nav>
          </div>

          <div class="table-container">
            <div class="table-header d-flex justify-content-between align-items-center">
              <h4>Danh sách tài khoản</h4>
              <button class="btn btn-light btn-sm" onclick="refreshUsers()">
                <i class="fas fa-refresh"></i> Tải lại
              </button>
            </div>
            <div id="users-content">
              <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> Đang tải...
              </div>
            </div>
          </div>
        </div>

        <!-- Homestays Section -->
        <div class="content-section" id="homestays">
          <div class="page-header">
            <h2>Quản lý Homestay</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="menu-link" data-section="dashboard">Dashboard</a></li>
                <li class="breadcrumb-item active">Quản lý Homestay</li>
              </ol>
            </nav>
          </div>

          <div class="table-container">
            <div class="table-header d-flex justify-content-between align-items-center">
              <h4>Danh sách Homestay</h4>
              <button class="btn btn-light btn-sm" onclick="refreshHomestays()">
                <i class="fas fa-refresh"></i> Tải lại
              </button>
            </div>
            <div id="homestays-content">
              <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> Đang tải...
              </div>
            </div>
          </div>
        </div>

        <!-- Rooms Section -->
        <div class="content-section" id="rooms">
          <div class="page-header">
            <h2>Quản lý phòng</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="menu-link" data-section="dashboard">Dashboard</a></li>
                <li class="breadcrumb-item active">Quản lý phòng</li>
              </ol>
            </nav>
          </div>

          <div class="table-container">
            <div class="table-header d-flex justify-content-between align-items-center">
              <h4>Danh sách phòng</h4>
              <button class="btn btn-light btn-sm" onclick="refreshRooms()">
                <i class="fas fa-refresh"></i> Tải lại
              </button>
            </div>
            <div id="rooms-content">
              <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> Đang tải...
              </div>
            </div>
          </div>
        </div>

        <!-- Bookings Section -->
        <div class="content-section" id="bookings">
          <div class="page-header">
            <h2>Quản lý hóa đơn</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="menu-link" data-section="dashboard">Dashboard</a></li>
                <li class="breadcrumb-item active">Quản lý hóa đơn</li>
              </ol>
            </nav>
          </div>

          <div class="table-container">
            <div class="table-header d-flex justify-content-between align-items-center">
              <h4>Danh sách hóa đơn</h4>
              <div>
                <select class="form-select form-select-sm me-2" id="bookingStatusFilter" onchange="refreshBookings()">
                  <option value="all">Tất cả</option>
                  <option value="pending">Chờ xử lý</option>
                  <option value="completed">Hoàn thành</option>
                  <option value="canceled">Đã hủy</option>
                  <option value="rejected">Từ chối</option>
                </select>
                <button class="btn btn-light btn-sm" onclick="refreshBookings()">
                  <i class="fas fa-refresh"></i> Tải lại
                </button>
              </div>
            </div>
            <div id="bookings-content">
              <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> Đang tải...
              </div>
            </div>
          </div>
        </div>

        <!-- Reviews Section -->
        <div class="content-section" id="reviews">
          <div class="page-header">
            <h2>Quản lý đánh giá</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="menu-link" data-section="dashboard">Dashboard</a></li>
                <li class="breadcrumb-item active">Quản lý đánh giá</li>
              </ol>
            </nav>
          </div>

          <div class="table-container">
            <div class="table-header d-flex justify-content-between align-items-center">
              <h4>Danh sách đánh giá</h4>
              <button class="btn btn-light btn-sm" onclick="refreshReviews()">
                <i class="fas fa-refresh"></i> Tải lại
              </button>
            </div>
            <div id="reviews-content">
              <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> Đang tải...
              </div>
            </div>
          </div>
        </div>

        <!-- Services Section -->
        <div class="content-section" id="services">
          <div class="page-header">
            <h2>Quản lý dịch vụ</h2>
            <nav aria-label="breadcrumb">
              <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#" class="menu-link" data-section="dashboard">Dashboard</a></li>
                <li class="breadcrumb-item active">Quản lý dịch vụ</li>
              </ol>
            </nav>
          </div>

          <div class="table-container">
            <div class="table-header d-flex justify-content-between align-items-center">
              <h4>Danh sách dịch vụ</h4>
              <button class="btn btn-light btn-sm" onclick="showAddServiceModal()">
                <i class="fas fa-plus"></i> Thêm mới
              </button>
            </div>
            <div id="services-content">
              <div class="loading">
                <i class="fas fa-spinner fa-spin"></i> Đang tải...
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Add Service Modal -->
  <div class="modal fade" id="addServiceModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Thêm dịch vụ mới</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="addServiceForm">
            <div class="mb-3">
              <label for="serviceName" class="form-label">Tên dịch vụ</label>
              <input type="text" class="form-control" id="serviceName" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
          <button type="button" class="btn btn-primary" onclick="addService()">Thêm</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Service Modal -->
  <div class="modal fade" id="editServiceModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Sửa dịch vụ</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="editServiceForm">
            <input type="hidden" id="editServiceId">
            <div class="mb-3">
              <label for="editServiceName" class="form-label">Tên dịch vụ</label>
              <input type="text" class="form-control" id="editServiceName" required>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
          <button type="button" class="btn btn-primary" onclick="updateService()">Cập nhật</button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Menu navigation
    document.addEventListener('DOMContentLoaded', function() {
      const menuLinks = document.querySelectorAll('.menu-link');
      const contentSections = document.querySelectorAll('.content-section');

      menuLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          // ✅ Cho phép link đăng xuất hoạt động bình thường
          if (this.getAttribute('href') === '/logout') {
            return; // Không ngăn chặn link đăng xuất
          }
          
          e.preventDefault();
          
          const targetSection = this.getAttribute('data-section');
          
          if (targetSection) {
            // Remove active class from all menu links
            menuLinks.forEach(ml => ml.classList.remove('active'));
            
            // Add active class to clicked link
            this.classList.add('active');
            
            // Hide all content sections
            contentSections.forEach(section => section.classList.remove('active'));
            
            // Show target section
            const targetElement = document.getElementById(targetSection);
            if (targetElement) {
              targetElement.classList.add('active');
              
              // Load data for the section
              loadSectionData(targetSection);
            }
          }
        });
      });

      // Sidebar toggle
      const sidebarToggle = document.getElementById('sidebarToggle');
      const sidebar = document.querySelector('.sidebar');
      const mainContent = document.querySelector('.main-content');
      const sidebarOverlay = document.getElementById('sidebarOverlay');
      
      if (sidebarToggle) {
        sidebarToggle.addEventListener('click', function() {
          const isOpen = sidebar.classList.contains('show');
          
          if (isOpen) {
            closeSidebar();
          } else {
            openSidebar();
          }
        });
      }

      function openSidebar() {
        sidebar.classList.add('show');
        mainContent.classList.add('sidebar-open');
        if (window.innerWidth <= 768) {
          sidebarOverlay.classList.add('show');
        }
      }

      function closeSidebar() {
        sidebar.classList.remove('show');
        mainContent.classList.remove('sidebar-open');
        sidebarOverlay.classList.remove('show');
      }

      // Đóng sidebar khi click overlay
      sidebarOverlay.addEventListener('click', closeSidebar);

      // Đóng sidebar khi click bên ngoài (mobile)
      document.addEventListener('click', function(e) {
        if (window.innerWidth <= 768) {
          if (!sidebar.contains(e.target) && !sidebarToggle.contains(e.target)) {
            closeSidebar();
          }
        }
      });

      // Xử lý resize window
      window.addEventListener('resize', function() {
        if (window.innerWidth > 768) {
          sidebarOverlay.classList.remove('show');
        }
      });

      // Load initial data for dashboard
      loadSectionData('dashboard');
    });

    // Load data for different sections
    function loadSectionData(section) {
      switch(section) {
        case 'users':
          refreshUsers();
          break;
        case 'homestays':
          refreshHomestays();
          break;
        case 'rooms':
          refreshRooms();
          break;
        case 'bookings':
          refreshBookings();
          break;
        case 'reviews':
          refreshReviews();
          break;
        case 'services':
          refreshServices();
          break;
      }
    }

    // API calls
    async function apiCall(url, options = {}) {
      try {
        const response = await fetch(url, {
          headers: {
            'Content-Type': 'application/json',
            ...options.headers
          },
          ...options
        });
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        return await response.json();
      } catch (error) {
        console.error('API call failed:', error);
        throw error;
      }
    }

    // Users functions
    async function refreshUsers(page = 1) {
      const content = document.getElementById('users-content');
      content.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>';
      
      try {
        const data = await apiCall(`/admin/users?page=${page}`);
        renderUsersTable(data);
      } catch (error) {
        content.innerHTML = '<div class="alert alert-danger">Lỗi tải dữ liệu người dùng</div>';
      }
    }

    function renderUsersTable(data) {
      const content = document.getElementById('users-content');
      let html = `
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Tên</th>
                <th>Email</th>
                <th>Vai trò</th>
                <th>Điện thoại</th>
                <th>Ngày tạo</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
      `;

      if (data.users && data.users.length > 0) {
        data.users.forEach(user => {
          html += `
            <tr>
              <td>${user.user_id}</td>
              <td>${user.name}</td>
              <td>${user.email}</td>
              <td>
                ${user.role === 'admin' ? 
                  '<span class="badge bg-danger">Admin</span>' : 
                  '<span class="badge bg-primary">User</span>'
                }
              </td>
              <td>${user.phone || 'N/A'}</td>
              <td>${new Date(user.created_at).toLocaleDateString('vi-VN')}</td>
              <td>
                ${user.role !== 'admin' ? 
                  `<button class="btn-action btn-delete" onclick="deleteUser(${user.user_id})">Xóa</button>` :
                  '<span class="text-muted">Không thể xóa</span>'
                }
              </td>
            </tr>
          `;
        });
      } else {
        html += '<tr><td colspan="7" class="text-center">Không có dữ liệu</td></tr>';
      }

      html += '</tbody></table></div>';

      // Add pagination if needed
      if (data.pagination && data.pagination.totalPages > 1) {
        html += renderPagination(data.pagination, 'refreshUsers');
      }

      content.innerHTML = html;
    }

    async function deleteUser(userId) {
      if (!confirm('Bạn có chắc chắn muốn xóa người dùng này?')) return;
      
      try {
        await apiCall(`/admin/users/${userId}`, { method: 'DELETE' });
        alert('Xóa người dùng thành công');
        refreshUsers();
      } catch (error) {
        alert('Lỗi xóa người dùng');
      }
    }

    // Homestays functions
    async function refreshHomestays(page = 1) {
      const content = document.getElementById('homestays-content');
      content.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>';
      
      try {
        const data = await apiCall(`/admin/homestays?page=${page}`);
        renderHomestaysTable(data);
      } catch (error) {
        content.innerHTML = '<div class="alert alert-danger">Lỗi tải dữ liệu homestay</div>';
      }
    }

    function renderHomestaysTable(data) {
      const content = document.getElementById('homestays-content');
      let html = `
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Tên</th>
                <th>Địa chỉ</th>
                <th>Số phòng</th>
                <th>Ngày tạo</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
      `;

      if (data.homestays && data.homestays.length > 0) {
        data.homestays.forEach(homestay => {
          html += `
            <tr>
              <td>${homestay.homestay_id}</td>
              <td>${homestay.name}</td>
              <td>${homestay.address}</td>
              <td>${homestay.RoomTypes ? homestay.RoomTypes.length : 0}</td>
              <td>${new Date(homestay.created_at).toLocaleDateString('vi-VN')}</td>
              <td>
                <button class="btn-action btn-view" onclick="viewHomestay(${homestay.homestay_id})">Xem</button>
                <button class="btn-action btn-edit" onclick="editHomestay(${homestay.homestay_id})">Sửa</button>
              </td>
            </tr>
          `;
        });
      } else {
        html += '<tr><td colspan="6" class="text-center">Không có dữ liệu</td></tr>';
      }

      html += '</tbody></table></div>';

      if (data.pagination && data.pagination.totalPages > 1) {
        html += renderPagination(data.pagination, 'refreshHomestays');
      }

      content.innerHTML = html;
    }

    // Rooms functions
    async function refreshRooms(page = 1) {
      const content = document.getElementById('rooms-content');
      content.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>';
      
      try {
        const data = await apiCall(`/admin/rooms?page=${page}`);
        renderRoomsTable(data);
      } catch (error) {
        content.innerHTML = '<div class="alert alert-danger">Lỗi tải dữ liệu phòng</div>';
      }
    }

    function renderRoomsTable(data) {
      const content = document.getElementById('rooms-content');
      let html = `
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Tên phòng</th>
                <th>Homestay</th>
                <th>Giá/đêm</th>
                <th>Sức chứa</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
      `;

      if (data.rooms && data.rooms.length > 0) {
        data.rooms.forEach(room => {
          html += `
            <tr>
              <td>${room.room_type_id}</td>
              <td>${room.type_name}</td>
              <td>${room.Homestay ? room.Homestay.name : 'N/A'}</td>
              <td>${new Intl.NumberFormat('vi-VN').format(room.price_per_night)} VND</td>
              <td>${room.max_guests} người</td>
              <td>
                <button class="btn-action btn-view" onclick="viewRoom(${room.room_type_id})">Xem</button>
                <button class="btn-action btn-edit" onclick="editRoom(${room.room_type_id})">Sửa</button>
              </td>
            </tr>
          `;
        });
      } else {
        html += '<tr><td colspan="6" class="text-center">Không có dữ liệu</td></tr>';
      }

      html += '</tbody></table></div>';

      if (data.pagination && data.pagination.totalPages > 1) {
        html += renderPagination(data.pagination, 'refreshRooms');
      }

      content.innerHTML = html;
    }

    // Bookings functions
    async function refreshBookings(page = 1) {
      const content = document.getElementById('bookings-content');
      const status = document.getElementById('bookingStatusFilter')?.value || 'all';
      content.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>';
      
      try {
        const data = await apiCall(`/admin/bookings?page=${page}&status=${status}`);
        renderBookingsTable(data);
      } catch (error) {
        content.innerHTML = '<div class="alert alert-danger">Lỗi tải dữ liệu hóa đơn</div>';
      }
    }

    function renderBookingsTable(data) {
      const content = document.getElementById('bookings-content');
      let html = `
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Khách hàng</th>
                <th>Phòng</th>
                <th>Ngày đặt</th>
                <th>Tổng tiền</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
      `;

      if (data.bookings && data.bookings.length > 0) {
        data.bookings.forEach(booking => {
          let statusBadge = '';
          switch(booking.status) {
            case 'completed':
              statusBadge = '<span class="badge bg-success">Hoàn thành</span>';
              break;
            case 'pending':
              statusBadge = '<span class="badge bg-warning">Chờ xử lý</span>';
              break;
            case 'canceled':
              statusBadge = '<span class="badge bg-danger">Đã hủy</span>';
              break;
            case 'rejected':
              statusBadge = '<span class="badge bg-secondary">Từ chối</span>';
              break;
            default:
              statusBadge = `<span class="badge bg-light">${booking.status}</span>`;
          }

          html += `
            <tr>
              <td>${booking.booking_id}</td>
              <td>${booking.User ? booking.User.name : booking.name}</td>
              <td>${booking.RoomType ? booking.RoomType.type_name : 'N/A'}</td>
              <td>${new Date(booking.booking_date).toLocaleDateString('vi-VN')}</td>
              <td>${new Intl.NumberFormat('vi-VN').format(booking.total_price)} VND</td>
              <td>${statusBadge}</td>
              <td>
                <button class="btn-action btn-view" onclick="viewBooking(${booking.booking_id})">Xem</button>
                ${booking.status === 'pending' ? 
                  `<select class="form-select form-select-sm d-inline-block w-auto" onchange="updateBookingStatus(${booking.booking_id}, this.value)">
                    <option value="">Chọn</option>
                    <option value="completed">Hoàn thành</option>
                    <option value="rejected">Từ chối</option>
                  </select>` : ''
                }
              </td>
            </tr>
          `;
        });
      } else {
        html += '<tr><td colspan="7" class="text-center">Không có dữ liệu</td></tr>';
      }

      html += '</tbody></table></div>';

      if (data.pagination && data.pagination.totalPages > 1) {
        html += renderPagination(data.pagination, 'refreshBookings');
      }

      content.innerHTML = html;
    }

    async function updateBookingStatus(bookingId, status) {
      if (!status) return;
      
      try {
        await apiCall(`/admin/bookings/${bookingId}/status`, {
          method: 'PUT',
          body: JSON.stringify({ status })
        });
        alert('Cập nhật trạng thái thành công');
        refreshBookings();
      } catch (error) {
        alert('Lỗi cập nhật trạng thái');
      }
    }

    // Reviews functions
    async function refreshReviews(page = 1) {
      const content = document.getElementById('reviews-content');
      content.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>';
      
      try {
        const data = await apiCall(`/admin/reviews?page=${page}`);
        renderReviewsTable(data);
      } catch (error) {
        content.innerHTML = '<div class="alert alert-danger">Lỗi tải dữ liệu đánh giá</div>';
      }
    }

    function renderReviewsTable(data) {
      const content = document.getElementById('reviews-content');
      let html = `
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Khách hàng</th>
                <th>Phòng</th>
                <th>Đánh giá</th>
                <th>Bình luận</th>
                <th>Ngày tạo</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
      `;

      if (data.reviews && data.reviews.length > 0) {
        data.reviews.forEach(review => {
          const stars = '★'.repeat(review.rating) + '☆'.repeat(5 - review.rating);
          
          html += `
            <tr>
              <td>${review.review_id}</td>
              <td>${review.User ? review.User.name : 'Ẩn danh'}</td>
              <td>${review.RoomType ? review.RoomType.type_name : 'N/A'}</td>
              <td><span class="text-warning">${stars}</span></td>
              <td>${review.comment ? review.comment.substring(0, 50) + '...' : 'Không có'}</td>
              <td>${new Date(review.created_at).toLocaleDateString('vi-VN')}</td>
              <td>
                <button class="btn-action btn-view" onclick="viewReview(${review.review_id})">Xem</button>
                <button class="btn-action btn-delete" onclick="deleteReview(${review.review_id})">Xóa</button>
              </td>
            </tr>
          `;
        });
      } else {
        html += '<tr><td colspan="7" class="text-center">Không có dữ liệu</td></tr>';
      }

      html += '</tbody></table></div>';

      if (data.pagination && data.pagination.totalPages > 1) {
        html += renderPagination(data.pagination, 'refreshReviews');
      }

      content.innerHTML = html;
    }

    async function deleteReview(reviewId) {
      if (!confirm('Bạn có chắc chắn muốn xóa đánh giá này?')) return;
      
      try {
        await apiCall(`/admin/reviews/${reviewId}`, { method: 'DELETE' });
        alert('Xóa đánh giá thành công');
        refreshReviews();
      } catch (error) {
        alert('Lỗi xóa đánh giá');
      }
    }

    // Services functions
    async function refreshServices() {
      const content = document.getElementById('services-content');
      content.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin"></i> Đang tải...</div>';
      
      try {
        const data = await apiCall('/admin/services');
        renderServicesTable(data);
      } catch (error) {
        content.innerHTML = '<div class="alert alert-danger">Lỗi tải dữ liệu dịch vụ</div>';
      }
    }

    function renderServicesTable(data) {
      const content = document.getElementById('services-content');
      let html = `
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>ID</th>
                <th>Tên dịch vụ</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
      `;

      if (data.services && data.services.length > 0) {
        data.services.forEach(service => {
          html += `
            <tr>
              <td>${service.service_id}</td>
              <td>${service.service_name}</td>
              <td>
                <button class="btn-action btn-edit" onclick="showEditServiceModal(${service.service_id}, '${service.service_name}')">Sửa</button>
                <button class="btn-action btn-delete" onclick="deleteService(${service.service_id})">Xóa</button>
              </td>
            </tr>
          `;
        });
      } else {
        html += '<tr><td colspan="3" class="text-center">Không có dữ liệu</td></tr>';
      }

      html += '</tbody></table></div>';
      content.innerHTML = html;
    }

    function showAddServiceModal() {
      document.getElementById('serviceName').value = '';
      new bootstrap.Modal(document.getElementById('addServiceModal')).show();
    }

    function showEditServiceModal(serviceId, serviceName) {
      document.getElementById('editServiceId').value = serviceId;
      document.getElementById('editServiceName').value = serviceName;
      new bootstrap.Modal(document.getElementById('editServiceModal')).show();
    }

    async function addService() {
      const serviceName = document.getElementById('serviceName').value;
      
      if (!serviceName.trim()) {
        alert('Vui lòng nhập tên dịch vụ');
        return;
      }
      
      try {
        await apiCall('/admin/services', {
          method: 'POST',
          body: JSON.stringify({ service_name: serviceName })
        });
        alert('Thêm dịch vụ thành công');
        bootstrap.Modal.getInstance(document.getElementById('addServiceModal')).hide();
        refreshServices();
      } catch (error) {
        alert('Lỗi thêm dịch vụ');
      }
    }

    async function updateService() {
      const serviceId = document.getElementById('editServiceId').value;
      const serviceName = document.getElementById('editServiceName').value;
      
      if (!serviceName.trim()) {
        alert('Vui lòng nhập tên dịch vụ');
        return;
      }
      
      try {
        await apiCall(`/admin/services/${serviceId}`, {
          method: 'PUT',
          body: JSON.stringify({ service_name: serviceName })
        });
        alert('Cập nhật dịch vụ thành công');
        bootstrap.Modal.getInstance(document.getElementById('editServiceModal')).hide();
        refreshServices();
      } catch (error) {
        alert('Lỗi cập nhật dịch vụ');
      }
    }

    async function deleteService(serviceId) {
      if (!confirm('Bạn có chắc chắn muốn xóa dịch vụ này?')) return;
      
      try {
        await apiCall(`/admin/services/${serviceId}`, { method: 'DELETE' });
        alert('Xóa dịch vụ thành công');
        refreshServices();
      } catch (error) {
        alert('Lỗi xóa dịch vụ');
      }
    }

    // Utility functions
    function renderPagination(pagination, functionName) {
      let html = '<nav aria-label="Page navigation"><ul class="pagination justify-content-center">';
      
      // Previous button
      if (pagination.currentPage > 1) {
        html += `<li class="page-item">
          <a class="page-link" href="#" onclick="${functionName}(${pagination.currentPage - 1})">Trước</a>
        </li>`;
      }
      
      // Page numbers
      const startPage = Math.max(1, pagination.currentPage - 2);
      const endPage = Math.min(pagination.totalPages, pagination.currentPage + 2);
      
      for (let i = startPage; i <= endPage; i++) {
        html += `<li class="page-item ${i === pagination.currentPage ? 'active' : ''}">
          <a class="page-link" href="#" onclick="${functionName}(${i})">${i}</a>
        </li>`;
      }
      
      // Next button
      if (pagination.currentPage < pagination.totalPages) {
        html += `<li class="page-item">
          <a class="page-link" href="#" onclick="${functionName}(${pagination.currentPage + 1})">Sau</a>
        </li>`;
      }
      
      html += '</ul></nav>';
      return html;
    }

    // Placeholder functions for view/edit actions
    function viewHomestay(id) {
      alert(`Xem homestay ID: ${id} - Chức năng này sẽ được phát triển`);
    }

    function editHomestay(id) {
      alert(`Sửa homestay ID: ${id} - Chức năng này sẽ được phát triển`);
    }

    function viewRoom(id) {
      alert(`Xem phòng ID: ${id} - Chức năng này sẽ được phát triển`);
    }

    function editRoom(id) {
      alert(`Sửa phòng ID: ${id} - Chức năng này sẽ được phát triển`);
    }

    function viewBooking(id) {
      alert(`Xem booking ID: ${id} - Chức năng này sẽ được phát triển`);
    }

    function viewReview(id) {
      alert(`Xem đánh giá ID: ${id} - Chức năng này sẽ được phát triển`);
    }
  </script>
</body>
</html>